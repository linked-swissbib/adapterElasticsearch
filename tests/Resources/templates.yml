search:
  index: 'index1'
  type: 'type1'
  size: 100
  from: 90
  query:
    match:
      _all: 'test query'

search_with_variables:
  index: '{index}'
  type: '{type}'
  size: '{size}'
  from: '{from}'
  query:
    match:
      _all: 'test query'

match:
  index: 'testIndex'
  type: 'testType'
  query:
    match:
      _all: 'test query'

match_with_variables:
  index: 'testIndex'
  type: 'testType'
  query:
    match:
      _all: '{q}'

match_with_parameters:
  index: 'testIndex'
  type: 'testType'
  query:
    match:
      _all:
        query: 'search query'
        operator: 'and'
        foo: 'bar'

match_with_parameters_missing_parameter:
  index: 'testIndex'
  type: 'testType'
  query:
    match:
      _all:
        operator: 'and'
        foo: 'bar'

ids:
  index: 'testIndex'
  type: '{type}'
  query:
    ids:
      values: ['{id}', '1234']

ids_with_parameters:
  index: 'testIndex'
  type: 'testType'
  query:
    ids:
      type: 'typeB'
      values: ['1234']

params:
  index: 'testIndex'
  type: 'testType'
  query:
    ids:
      values: ['{id}', '1234']

invalid_query_type:
  index: 'testIndex'
  type: 'testType'
  query:
    invalid_query_type:
      foo: 'bar'


multi_match:
  index: 'testIndex'
  type: 'testType'
  size: 20
  query:
    multi_match:
      query: 'test'
      fields: 'field1^2,field2'
      type: 'cross_fields'
      operator: 'and'
      minimum_should_match: '50%'

multi_match_with_variables:
  index: 'testIndex'
  type: 'testType'
  size: 20
  query:
    multi_match:
      query: '{q}'
      fields: '{firstName},{lastName},address'

match_all_query:
  index: 'testIndex'
  type: 'testType'
  size: 0
  query:
    bool:
      must:
        match_all:
        #we need an additional key value pair because the query builder expects an array
        #although match_all is used nearly without any options
          eins: 'eins'
      must_not:
        exists:
          field: 'dct:rights'

terms:
  index: 'testIndex'
  type: 'testType'
  query:
    terms:
      'field': ['{q}']

term:
  index: 'testIndex'
  type: 'testType'
  query:
    term:
      test: '{test}'

term_with_parameters:
  index: 'testIndex'
  type: 'testType'
  query:
    term:
      test:
        value: 'test'
        boost: 2

term_with_parameters_missing_parameter:
  index: 'testIndex'
  type: 'testType'
  query:
    term:
      test:
        boost: 2

bool:
  index: 'testIndex'
  type: 'testType'
  query:
    bool:
      must:
        multi_match:
          query: '{q}'
          fields: '{test},test2'
      must_not:
        term:
          status: 'active'

complex_bool:
  index: 'testIndex'
  type: 'testType'
  query:
    bool:
      must:
        term:
          user: 'test user'
      must_not:
        - term:
            availability: 'not available'
        - term:
            availability: 'maybe available'
      filter:
        term:
          username: '{username}'
      should:
        term:
          favourite: 'is favourite'
      boost: 1.0
      minimum_should_match: 1

complex_bool_filterdctrights:
  index: 'testIndex'
  type: 'testType'
  query:
    bool:
      must:
        multi_match:
          query: '{q}'
          fields: 'dct:title,dct:language'
      #we need must_not instead of filter because missing Query Type is no longer supported by ES in version 5
      must_not:
        exists:
          field: 'dct:rights'


